[{"C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\index.js":"1","C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\App.js":"3","C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\firebase.js":"4"},{"size":514,"mtime":1652013584244,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1652013223238,"results":"7","hashOfConfig":"6"},{"size":1828,"mtime":1652022169874,"results":"8","hashOfConfig":"6"},{"size":679,"mtime":1652014423294,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"8w50v2",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\index.js",[],[],[],"C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\App.js",["24","25"],[],"import './App.css';\nimport {useState, useEffect} from \"react\";  \nimport {storage} from './firebase'\nimport {ref, uploadBytes, listAll, getDownloadURL} from \"firebase/storage\" //reference where in our bucket is the image,listing all the files\nimport {v4} from 'uuid' //for randomizing letters\n// import { set } from 'mongoose';\n// something with rules only people logged in\n// register the app in project settings \n\nfunction App() {\n  const [imageUpload, setImageUpload] = useState(null)\n  const [imageUrls, setImageUrls] = useState([]);\n\n  const imageListRef = ref(storage, \"images/\")\n\n  const uploadFile = () => {\n    if (imageUpload == null) return;\n    //functions from firebase\n    ////the name and the path where we store it as we are making folder as well as to make it unique\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`) \n    //where to be upload and the image itself \n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) => {\n        setImageUrls((prev) => [...prev, url]);\n      })\n      \n    }\n )}\n useEffect(() => {\n  listAll(imageListRef).then((response) => {\n    response.items.forEach((item) => {\n      getDownloadURL(item).then((url) => {\n        setImageUrls((prev) => [...prev, url]);\n      });\n    });\n  });\n}, []);\n  return (     \n         <div className=\"App\">\n             {/* image upload will take the value of the input and to access the file and can access multiple and put them in array */}\n         <input\n           type=\"file\"\n           onChange={(event) => {\n             setImageUpload(event.target.files[0]);\n           }}\n         />\n         <button onClick={uploadFile}> Upload Image</button>\n         {imageUrls.map((url) => {\n           return <img src={url} />;\n         })}\n</div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Yoana\\Desktop\\git\\sm4-rb1-skatrixx\\Gallery\\my-app\\src\\firebase.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":37,"column":4,"nodeType":"28","endLine":37,"endColumn":6,"suggestions":"29"},{"ruleId":"30","severity":1,"message":"31","line":49,"column":19,"nodeType":"32","endLine":49,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imageListRef'. Either include it or remove the dependency array.","ArrayExpression",["33"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"34","fix":"35"},"Update the dependencies array to be: [imageListRef]",{"range":"36","text":"37"},[1308,1310],"[imageListRef]"]