{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yoana\\\\Desktop\\\\git\\\\sm4-rb1-skatrixx\\\\Gallery\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { storage } from './firebase';\nimport { ref, uploadBytes, listAll, getDownloadURL } from \"firebase/storage\"; //reference where in our bucket is the image,listing all the files\n\nimport { v4 } from 'uuid'; //for randomizing letters\n\nimport { set } from 'mongoose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [imageUpload, setImageUpload] = useState(null);\n  const [imageUrls, setImageUrls] = useState([]);\n  const imageListRef = ref(storage, \"images/\");\n\n  const uploadFile = () => {\n    if (imageUpload == null) return; //functions from firebase\n    ////the name and the path where we store it as we are making folder as well as to make it unique\n\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`); //where to be upload and the image itself \n\n    uploadBytes(imageRef, imageUpload).then(snapshot => {\n      getDownloadURL(snapshot.ref).then(url => {\n        setImageUrls(prev => [...prev, url]);\n      });\n    });\n  };\n\n  useEffect(() => {\n    listAll(imageListRef).then(response => {\n      response.items.forEach(item => {\n        getDownloadURL(item).then(url => {\n          setImageUrls(prev => [...prev, url]);\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: event => {\n        setImageUpload(event.target.files[0]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \" Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }, this), imageUrls.map(url => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"HuzKbxPMeWzezQAAjY76BDVKkII=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","storage","ref","uploadBytes","listAll","getDownloadURL","v4","set","App","imageUpload","setImageUpload","imageUrls","setImageUrls","imageListRef","uploadFile","imageRef","name","then","snapshot","url","prev","response","items","forEach","item","event","target","files","map"],"sources":["C:/Users/Yoana/Desktop/git/sm4-rb1-skatrixx/Gallery/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState, useEffect} from \"react\";  \nimport {storage} from './firebase'\nimport {ref, uploadBytes, listAll, getDownloadURL} from \"firebase/storage\" //reference where in our bucket is the image,listing all the files\nimport {v4} from 'uuid' //for randomizing letters\nimport { set } from 'mongoose';\n\nfunction App() {\n  const [imageUpload, setImageUpload] = useState(null)\n  const [imageUrls, setImageUrls] = useState([]);\n\n  const imageListRef = ref(storage, \"images/\")\n\n  const uploadFile = () => {\n    if (imageUpload == null) return;\n    //functions from firebase\n    ////the name and the path where we store it as we are making folder as well as to make it unique\n    const imageRef = ref(storage, `images/${imageUpload.name + v4()}`) \n    //where to be upload and the image itself \n    uploadBytes(imageRef, imageUpload).then((snapshot) => {\n      getDownloadURL(snapshot.ref).then((url) => {\n        setImageUrls((prev) => [...prev, url]);\n      })\n      \n    }\n )}\n useEffect(() => {\n  listAll(imageListRef).then((response) => {\n    response.items.forEach((item) => {\n      getDownloadURL(item).then((url) => {\n        setImageUrls((prev) => [...prev, url]);\n      });\n    });\n  });\n}, []);\n  return (     \n         <div className=\"App\">\n             {/* image upload will take the value of the input and to access the file and can access multiple and put them in array */}\n         <input\n           type=\"file\"\n           onChange={(event) => {\n             setImageUpload(event.target.files[0]);\n           }}\n         />\n         <button onClick={uploadFile}> Upload Image</button>\n         {imageUrls.map((url) => {\n           return <img src={url} />;\n         })}\n</div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,GAAR,EAAaC,WAAb,EAA0BC,OAA1B,EAAmCC,cAAnC,QAAwD,kBAAxD,C,CAA2E;;AAC3E,SAAQC,EAAR,QAAiB,MAAjB,C,CAAwB;;AACxB,SAASC,GAAT,QAAoB,UAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;EAEA,MAAMc,YAAY,GAAGX,GAAG,CAACD,OAAD,EAAU,SAAV,CAAxB;;EAEA,MAAMa,UAAU,GAAG,MAAM;IACvB,IAAIL,WAAW,IAAI,IAAnB,EAAyB,OADF,CAEvB;IACA;;IACA,MAAMM,QAAQ,GAAGb,GAAG,CAACD,OAAD,EAAW,UAASQ,WAAW,CAACO,IAAZ,GAAmBV,EAAE,EAAG,EAA5C,CAApB,CAJuB,CAKvB;;IACAH,WAAW,CAACY,QAAD,EAAWN,WAAX,CAAX,CAAmCQ,IAAnC,CAAyCC,QAAD,IAAc;MACpDb,cAAc,CAACa,QAAQ,CAAChB,GAAV,CAAd,CAA6Be,IAA7B,CAAmCE,GAAD,IAAS;QACzCP,YAAY,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,GAAV,CAAX,CAAZ;MACD,CAFD;IAID,CALD;EAMD,CAZD;;EAaDnB,SAAS,CAAC,MAAM;IACfI,OAAO,CAACS,YAAD,CAAP,CAAsBI,IAAtB,CAA4BI,QAAD,IAAc;MACvCA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAwBC,IAAD,IAAU;QAC/BnB,cAAc,CAACmB,IAAD,CAAd,CAAqBP,IAArB,CAA2BE,GAAD,IAAS;UACjCP,YAAY,CAAEQ,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUD,GAAV,CAAX,CAAZ;QACD,CAFD;MAGD,CAJD;IAKD,CAND;EAOD,CARS,EAQP,EARO,CAAT;EASC,oBACO;IAAK,SAAS,EAAC,KAAf;IAAA,wBAEA;MACE,IAAI,EAAC,MADP;MAEE,QAAQ,EAAGM,KAAD,IAAW;QACnBf,cAAc,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAd;MACD;IAJH;MAAA;MAAA;MAAA;IAAA,QAFA,eAQA;MAAQ,OAAO,EAAEb,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARA,EASCH,SAAS,CAACiB,GAAV,CAAeT,GAAD,IAAS;MACtB,oBAAO;QAAK,GAAG,EAAEA;MAAV;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA,CATD;EAAA;IAAA;IAAA;IAAA;EAAA,QADP;AAeD;;GA3CQX,G;;KAAAA,G;AA6CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}